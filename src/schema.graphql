type Query {
    greetings(name: String): String!
    me: User!
    post: Post!
    add(num1: Float!, num2: Float!): Float!
    getNums: [Int!]!
    addArr(nums: [Float!]!): Float!
    users(query: String): [User!]!
    posts(query: String): [Post!]!
    comments: [Comment!]!
}

input createUserInput{
    name: String!
    email: String!,
    age: Int
}

input createPostInput{
    title: String!
    body: String!
    published: Boolean!
    author: ID!
}

input createCommentInput{
    text: String!
    author: ID!
    post: ID!
}

type Mutation{
    createUser(data:createUserInput): User!
    createPost(data:createPostInput): Post!
    createComment(data:createCommentInput): Comment!
    deleteUser(id: ID!): User!
    deletePost(id: ID!): Post!
    deleteComment(id: ID!): Comment!
}

type User{
    id: ID!
    name: String!
    email: String!
    age: Int
    posts: [Post!]!
    comments: [Comment!]!
}

type Post{
    id: ID!
    title: String!
    body: String!
    published: Boolean!
    author: User!
    comments: [Comment!]!
}

type Comment{
    id: ID!
    text: String!
    author: User!
    post: Post!
}